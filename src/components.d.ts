/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface AppHome {}
  interface AppRoot {}
  interface Component_template_ {}
  interface ComponentActionSheet {}
  interface ComponentAlert {}
  interface ComponentAvatar {}
  interface ComponentBadge {}
  interface ComponentButton {}
  interface ComponentCard {}
  interface ComponentCheckbox {}
  interface ComponentChip {}
  interface ComponentContent {}
  interface ComponentDatetime {}
  interface ComponentFab {}
  interface ComponentGrid {}
  interface ComponentIcons {}
  interface ComponentInfiniteScroll {}
  interface ComponentInput {}
  interface ComponentList {}
  interface ComponentListItem {}
  interface ComponentLoading {}
  interface ComponentMenu {}
  interface ComponentModal {}
  interface ComponentModalContent {}
  interface ComponentNav {}
  interface ComponentNote {}
  interface ComponentPicker {}
  interface ComponentPopover {}
  interface ComponentProgress {}
  interface ComponentRadio {}
  interface ComponentRange {}
  interface ComponentRefresher {}
  interface ComponentReorder {}
  interface ComponentRouting {}
  interface ComponentSearchbar {}
  interface ComponentSegment {}
  interface ComponentSelect {}
  interface ComponentSkeletonText {}
  interface ComponentSlides {}
  interface ComponentTabs {}
  interface ComponentTabsGames {}
  interface ComponentTabsMovies {}
  interface ComponentTabsMusic {}
  interface ComponentText {}
  interface ComponentThumbnail {}
  interface ComponentToast {}
  interface ComponentToggle {}
  interface ComponentToolbar {}
  interface NavExamplePage {}
  interface PopoverExamplePage {}
}

declare global {


  interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {}
  var HTMLAppHomeElement: {
    prototype: HTMLAppHomeElement;
    new (): HTMLAppHomeElement;
  };

  interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {}
  var HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };

  interface HTMLComponent_template_Element extends Components.Component_template_, HTMLStencilElement {}
  var HTMLComponent_template_Element: {
    prototype: HTMLComponent_template_Element;
    new (): HTMLComponent_template_Element;
  };

  interface HTMLComponentActionSheetElement extends Components.ComponentActionSheet, HTMLStencilElement {}
  var HTMLComponentActionSheetElement: {
    prototype: HTMLComponentActionSheetElement;
    new (): HTMLComponentActionSheetElement;
  };

  interface HTMLComponentAlertElement extends Components.ComponentAlert, HTMLStencilElement {}
  var HTMLComponentAlertElement: {
    prototype: HTMLComponentAlertElement;
    new (): HTMLComponentAlertElement;
  };

  interface HTMLComponentAvatarElement extends Components.ComponentAvatar, HTMLStencilElement {}
  var HTMLComponentAvatarElement: {
    prototype: HTMLComponentAvatarElement;
    new (): HTMLComponentAvatarElement;
  };

  interface HTMLComponentBadgeElement extends Components.ComponentBadge, HTMLStencilElement {}
  var HTMLComponentBadgeElement: {
    prototype: HTMLComponentBadgeElement;
    new (): HTMLComponentBadgeElement;
  };

  interface HTMLComponentButtonElement extends Components.ComponentButton, HTMLStencilElement {}
  var HTMLComponentButtonElement: {
    prototype: HTMLComponentButtonElement;
    new (): HTMLComponentButtonElement;
  };

  interface HTMLComponentCardElement extends Components.ComponentCard, HTMLStencilElement {}
  var HTMLComponentCardElement: {
    prototype: HTMLComponentCardElement;
    new (): HTMLComponentCardElement;
  };

  interface HTMLComponentCheckboxElement extends Components.ComponentCheckbox, HTMLStencilElement {}
  var HTMLComponentCheckboxElement: {
    prototype: HTMLComponentCheckboxElement;
    new (): HTMLComponentCheckboxElement;
  };

  interface HTMLComponentChipElement extends Components.ComponentChip, HTMLStencilElement {}
  var HTMLComponentChipElement: {
    prototype: HTMLComponentChipElement;
    new (): HTMLComponentChipElement;
  };

  interface HTMLComponentContentElement extends Components.ComponentContent, HTMLStencilElement {}
  var HTMLComponentContentElement: {
    prototype: HTMLComponentContentElement;
    new (): HTMLComponentContentElement;
  };

  interface HTMLComponentDatetimeElement extends Components.ComponentDatetime, HTMLStencilElement {}
  var HTMLComponentDatetimeElement: {
    prototype: HTMLComponentDatetimeElement;
    new (): HTMLComponentDatetimeElement;
  };

  interface HTMLComponentFabElement extends Components.ComponentFab, HTMLStencilElement {}
  var HTMLComponentFabElement: {
    prototype: HTMLComponentFabElement;
    new (): HTMLComponentFabElement;
  };

  interface HTMLComponentGridElement extends Components.ComponentGrid, HTMLStencilElement {}
  var HTMLComponentGridElement: {
    prototype: HTMLComponentGridElement;
    new (): HTMLComponentGridElement;
  };

  interface HTMLComponentIconsElement extends Components.ComponentIcons, HTMLStencilElement {}
  var HTMLComponentIconsElement: {
    prototype: HTMLComponentIconsElement;
    new (): HTMLComponentIconsElement;
  };

  interface HTMLComponentInfiniteScrollElement extends Components.ComponentInfiniteScroll, HTMLStencilElement {}
  var HTMLComponentInfiniteScrollElement: {
    prototype: HTMLComponentInfiniteScrollElement;
    new (): HTMLComponentInfiniteScrollElement;
  };

  interface HTMLComponentInputElement extends Components.ComponentInput, HTMLStencilElement {}
  var HTMLComponentInputElement: {
    prototype: HTMLComponentInputElement;
    new (): HTMLComponentInputElement;
  };

  interface HTMLComponentListElement extends Components.ComponentList, HTMLStencilElement {}
  var HTMLComponentListElement: {
    prototype: HTMLComponentListElement;
    new (): HTMLComponentListElement;
  };

  interface HTMLComponentListItemElement extends Components.ComponentListItem, HTMLStencilElement {}
  var HTMLComponentListItemElement: {
    prototype: HTMLComponentListItemElement;
    new (): HTMLComponentListItemElement;
  };

  interface HTMLComponentLoadingElement extends Components.ComponentLoading, HTMLStencilElement {}
  var HTMLComponentLoadingElement: {
    prototype: HTMLComponentLoadingElement;
    new (): HTMLComponentLoadingElement;
  };

  interface HTMLComponentMenuElement extends Components.ComponentMenu, HTMLStencilElement {}
  var HTMLComponentMenuElement: {
    prototype: HTMLComponentMenuElement;
    new (): HTMLComponentMenuElement;
  };

  interface HTMLComponentModalElement extends Components.ComponentModal, HTMLStencilElement {}
  var HTMLComponentModalElement: {
    prototype: HTMLComponentModalElement;
    new (): HTMLComponentModalElement;
  };

  interface HTMLComponentModalContentElement extends Components.ComponentModalContent, HTMLStencilElement {}
  var HTMLComponentModalContentElement: {
    prototype: HTMLComponentModalContentElement;
    new (): HTMLComponentModalContentElement;
  };

  interface HTMLComponentNavElement extends Components.ComponentNav, HTMLStencilElement {}
  var HTMLComponentNavElement: {
    prototype: HTMLComponentNavElement;
    new (): HTMLComponentNavElement;
  };

  interface HTMLComponentNoteElement extends Components.ComponentNote, HTMLStencilElement {}
  var HTMLComponentNoteElement: {
    prototype: HTMLComponentNoteElement;
    new (): HTMLComponentNoteElement;
  };

  interface HTMLComponentPickerElement extends Components.ComponentPicker, HTMLStencilElement {}
  var HTMLComponentPickerElement: {
    prototype: HTMLComponentPickerElement;
    new (): HTMLComponentPickerElement;
  };

  interface HTMLComponentPopoverElement extends Components.ComponentPopover, HTMLStencilElement {}
  var HTMLComponentPopoverElement: {
    prototype: HTMLComponentPopoverElement;
    new (): HTMLComponentPopoverElement;
  };

  interface HTMLComponentProgressElement extends Components.ComponentProgress, HTMLStencilElement {}
  var HTMLComponentProgressElement: {
    prototype: HTMLComponentProgressElement;
    new (): HTMLComponentProgressElement;
  };

  interface HTMLComponentRadioElement extends Components.ComponentRadio, HTMLStencilElement {}
  var HTMLComponentRadioElement: {
    prototype: HTMLComponentRadioElement;
    new (): HTMLComponentRadioElement;
  };

  interface HTMLComponentRangeElement extends Components.ComponentRange, HTMLStencilElement {}
  var HTMLComponentRangeElement: {
    prototype: HTMLComponentRangeElement;
    new (): HTMLComponentRangeElement;
  };

  interface HTMLComponentRefresherElement extends Components.ComponentRefresher, HTMLStencilElement {}
  var HTMLComponentRefresherElement: {
    prototype: HTMLComponentRefresherElement;
    new (): HTMLComponentRefresherElement;
  };

  interface HTMLComponentReorderElement extends Components.ComponentReorder, HTMLStencilElement {}
  var HTMLComponentReorderElement: {
    prototype: HTMLComponentReorderElement;
    new (): HTMLComponentReorderElement;
  };

  interface HTMLComponentRoutingElement extends Components.ComponentRouting, HTMLStencilElement {}
  var HTMLComponentRoutingElement: {
    prototype: HTMLComponentRoutingElement;
    new (): HTMLComponentRoutingElement;
  };

  interface HTMLComponentSearchbarElement extends Components.ComponentSearchbar, HTMLStencilElement {}
  var HTMLComponentSearchbarElement: {
    prototype: HTMLComponentSearchbarElement;
    new (): HTMLComponentSearchbarElement;
  };

  interface HTMLComponentSegmentElement extends Components.ComponentSegment, HTMLStencilElement {}
  var HTMLComponentSegmentElement: {
    prototype: HTMLComponentSegmentElement;
    new (): HTMLComponentSegmentElement;
  };

  interface HTMLComponentSelectElement extends Components.ComponentSelect, HTMLStencilElement {}
  var HTMLComponentSelectElement: {
    prototype: HTMLComponentSelectElement;
    new (): HTMLComponentSelectElement;
  };

  interface HTMLComponentSkeletonTextElement extends Components.ComponentSkeletonText, HTMLStencilElement {}
  var HTMLComponentSkeletonTextElement: {
    prototype: HTMLComponentSkeletonTextElement;
    new (): HTMLComponentSkeletonTextElement;
  };

  interface HTMLComponentSlidesElement extends Components.ComponentSlides, HTMLStencilElement {}
  var HTMLComponentSlidesElement: {
    prototype: HTMLComponentSlidesElement;
    new (): HTMLComponentSlidesElement;
  };

  interface HTMLComponentTabsElement extends Components.ComponentTabs, HTMLStencilElement {}
  var HTMLComponentTabsElement: {
    prototype: HTMLComponentTabsElement;
    new (): HTMLComponentTabsElement;
  };

  interface HTMLComponentTabsGamesElement extends Components.ComponentTabsGames, HTMLStencilElement {}
  var HTMLComponentTabsGamesElement: {
    prototype: HTMLComponentTabsGamesElement;
    new (): HTMLComponentTabsGamesElement;
  };

  interface HTMLComponentTabsMoviesElement extends Components.ComponentTabsMovies, HTMLStencilElement {}
  var HTMLComponentTabsMoviesElement: {
    prototype: HTMLComponentTabsMoviesElement;
    new (): HTMLComponentTabsMoviesElement;
  };

  interface HTMLComponentTabsMusicElement extends Components.ComponentTabsMusic, HTMLStencilElement {}
  var HTMLComponentTabsMusicElement: {
    prototype: HTMLComponentTabsMusicElement;
    new (): HTMLComponentTabsMusicElement;
  };

  interface HTMLComponentTextElement extends Components.ComponentText, HTMLStencilElement {}
  var HTMLComponentTextElement: {
    prototype: HTMLComponentTextElement;
    new (): HTMLComponentTextElement;
  };

  interface HTMLComponentThumbnailElement extends Components.ComponentThumbnail, HTMLStencilElement {}
  var HTMLComponentThumbnailElement: {
    prototype: HTMLComponentThumbnailElement;
    new (): HTMLComponentThumbnailElement;
  };

  interface HTMLComponentToastElement extends Components.ComponentToast, HTMLStencilElement {}
  var HTMLComponentToastElement: {
    prototype: HTMLComponentToastElement;
    new (): HTMLComponentToastElement;
  };

  interface HTMLComponentToggleElement extends Components.ComponentToggle, HTMLStencilElement {}
  var HTMLComponentToggleElement: {
    prototype: HTMLComponentToggleElement;
    new (): HTMLComponentToggleElement;
  };

  interface HTMLComponentToolbarElement extends Components.ComponentToolbar, HTMLStencilElement {}
  var HTMLComponentToolbarElement: {
    prototype: HTMLComponentToolbarElement;
    new (): HTMLComponentToolbarElement;
  };

  interface HTMLNavExamplePageElement extends Components.NavExamplePage, HTMLStencilElement {}
  var HTMLNavExamplePageElement: {
    prototype: HTMLNavExamplePageElement;
    new (): HTMLNavExamplePageElement;
  };

  interface HTMLPopoverExamplePageElement extends Components.PopoverExamplePage, HTMLStencilElement {}
  var HTMLPopoverExamplePageElement: {
    prototype: HTMLPopoverExamplePageElement;
    new (): HTMLPopoverExamplePageElement;
  };
  interface HTMLElementTagNameMap {
    'app-home': HTMLAppHomeElement;
    'app-root': HTMLAppRootElement;
    'component-_template_': HTMLComponent_template_Element;
    'component-action-sheet': HTMLComponentActionSheetElement;
    'component-alert': HTMLComponentAlertElement;
    'component-avatar': HTMLComponentAvatarElement;
    'component-badge': HTMLComponentBadgeElement;
    'component-button': HTMLComponentButtonElement;
    'component-card': HTMLComponentCardElement;
    'component-checkbox': HTMLComponentCheckboxElement;
    'component-chip': HTMLComponentChipElement;
    'component-content': HTMLComponentContentElement;
    'component-datetime': HTMLComponentDatetimeElement;
    'component-fab': HTMLComponentFabElement;
    'component-grid': HTMLComponentGridElement;
    'component-icons': HTMLComponentIconsElement;
    'component-infinite-scroll': HTMLComponentInfiniteScrollElement;
    'component-input': HTMLComponentInputElement;
    'component-list': HTMLComponentListElement;
    'component-list-item': HTMLComponentListItemElement;
    'component-loading': HTMLComponentLoadingElement;
    'component-menu': HTMLComponentMenuElement;
    'component-modal': HTMLComponentModalElement;
    'component-modal-content': HTMLComponentModalContentElement;
    'component-nav': HTMLComponentNavElement;
    'component-note': HTMLComponentNoteElement;
    'component-picker': HTMLComponentPickerElement;
    'component-popover': HTMLComponentPopoverElement;
    'component-progress': HTMLComponentProgressElement;
    'component-radio': HTMLComponentRadioElement;
    'component-range': HTMLComponentRangeElement;
    'component-refresher': HTMLComponentRefresherElement;
    'component-reorder': HTMLComponentReorderElement;
    'component-routing': HTMLComponentRoutingElement;
    'component-searchbar': HTMLComponentSearchbarElement;
    'component-segment': HTMLComponentSegmentElement;
    'component-select': HTMLComponentSelectElement;
    'component-skeleton-text': HTMLComponentSkeletonTextElement;
    'component-slides': HTMLComponentSlidesElement;
    'component-tabs': HTMLComponentTabsElement;
    'component-tabs-games': HTMLComponentTabsGamesElement;
    'component-tabs-movies': HTMLComponentTabsMoviesElement;
    'component-tabs-music': HTMLComponentTabsMusicElement;
    'component-text': HTMLComponentTextElement;
    'component-thumbnail': HTMLComponentThumbnailElement;
    'component-toast': HTMLComponentToastElement;
    'component-toggle': HTMLComponentToggleElement;
    'component-toolbar': HTMLComponentToolbarElement;
    'nav-example-page': HTMLNavExamplePageElement;
    'popover-example-page': HTMLPopoverExamplePageElement;
  }
}

declare namespace LocalJSX {
  interface AppHome extends JSXBase.HTMLAttributes<HTMLAppHomeElement> {}
  interface AppRoot extends JSXBase.HTMLAttributes<HTMLAppRootElement> {}
  interface Component_template_ extends JSXBase.HTMLAttributes<HTMLComponent_template_Element> {}
  interface ComponentActionSheet extends JSXBase.HTMLAttributes<HTMLComponentActionSheetElement> {}
  interface ComponentAlert extends JSXBase.HTMLAttributes<HTMLComponentAlertElement> {}
  interface ComponentAvatar extends JSXBase.HTMLAttributes<HTMLComponentAvatarElement> {}
  interface ComponentBadge extends JSXBase.HTMLAttributes<HTMLComponentBadgeElement> {}
  interface ComponentButton extends JSXBase.HTMLAttributes<HTMLComponentButtonElement> {}
  interface ComponentCard extends JSXBase.HTMLAttributes<HTMLComponentCardElement> {}
  interface ComponentCheckbox extends JSXBase.HTMLAttributes<HTMLComponentCheckboxElement> {}
  interface ComponentChip extends JSXBase.HTMLAttributes<HTMLComponentChipElement> {}
  interface ComponentContent extends JSXBase.HTMLAttributes<HTMLComponentContentElement> {}
  interface ComponentDatetime extends JSXBase.HTMLAttributes<HTMLComponentDatetimeElement> {}
  interface ComponentFab extends JSXBase.HTMLAttributes<HTMLComponentFabElement> {}
  interface ComponentGrid extends JSXBase.HTMLAttributes<HTMLComponentGridElement> {}
  interface ComponentIcons extends JSXBase.HTMLAttributes<HTMLComponentIconsElement> {}
  interface ComponentInfiniteScroll extends JSXBase.HTMLAttributes<HTMLComponentInfiniteScrollElement> {}
  interface ComponentInput extends JSXBase.HTMLAttributes<HTMLComponentInputElement> {}
  interface ComponentList extends JSXBase.HTMLAttributes<HTMLComponentListElement> {}
  interface ComponentListItem extends JSXBase.HTMLAttributes<HTMLComponentListItemElement> {}
  interface ComponentLoading extends JSXBase.HTMLAttributes<HTMLComponentLoadingElement> {}
  interface ComponentMenu extends JSXBase.HTMLAttributes<HTMLComponentMenuElement> {}
  interface ComponentModal extends JSXBase.HTMLAttributes<HTMLComponentModalElement> {}
  interface ComponentModalContent extends JSXBase.HTMLAttributes<HTMLComponentModalContentElement> {}
  interface ComponentNav extends JSXBase.HTMLAttributes<HTMLComponentNavElement> {}
  interface ComponentNote extends JSXBase.HTMLAttributes<HTMLComponentNoteElement> {}
  interface ComponentPicker extends JSXBase.HTMLAttributes<HTMLComponentPickerElement> {}
  interface ComponentPopover extends JSXBase.HTMLAttributes<HTMLComponentPopoverElement> {}
  interface ComponentProgress extends JSXBase.HTMLAttributes<HTMLComponentProgressElement> {}
  interface ComponentRadio extends JSXBase.HTMLAttributes<HTMLComponentRadioElement> {}
  interface ComponentRange extends JSXBase.HTMLAttributes<HTMLComponentRangeElement> {}
  interface ComponentRefresher extends JSXBase.HTMLAttributes<HTMLComponentRefresherElement> {}
  interface ComponentReorder extends JSXBase.HTMLAttributes<HTMLComponentReorderElement> {}
  interface ComponentRouting extends JSXBase.HTMLAttributes<HTMLComponentRoutingElement> {}
  interface ComponentSearchbar extends JSXBase.HTMLAttributes<HTMLComponentSearchbarElement> {}
  interface ComponentSegment extends JSXBase.HTMLAttributes<HTMLComponentSegmentElement> {}
  interface ComponentSelect extends JSXBase.HTMLAttributes<HTMLComponentSelectElement> {}
  interface ComponentSkeletonText extends JSXBase.HTMLAttributes<HTMLComponentSkeletonTextElement> {}
  interface ComponentSlides extends JSXBase.HTMLAttributes<HTMLComponentSlidesElement> {}
  interface ComponentTabs extends JSXBase.HTMLAttributes<HTMLComponentTabsElement> {}
  interface ComponentTabsGames extends JSXBase.HTMLAttributes<HTMLComponentTabsGamesElement> {}
  interface ComponentTabsMovies extends JSXBase.HTMLAttributes<HTMLComponentTabsMoviesElement> {}
  interface ComponentTabsMusic extends JSXBase.HTMLAttributes<HTMLComponentTabsMusicElement> {}
  interface ComponentText extends JSXBase.HTMLAttributes<HTMLComponentTextElement> {}
  interface ComponentThumbnail extends JSXBase.HTMLAttributes<HTMLComponentThumbnailElement> {}
  interface ComponentToast extends JSXBase.HTMLAttributes<HTMLComponentToastElement> {}
  interface ComponentToggle extends JSXBase.HTMLAttributes<HTMLComponentToggleElement> {}
  interface ComponentToolbar extends JSXBase.HTMLAttributes<HTMLComponentToolbarElement> {}
  interface NavExamplePage extends JSXBase.HTMLAttributes<HTMLNavExamplePageElement> {}
  interface PopoverExamplePage extends JSXBase.HTMLAttributes<HTMLPopoverExamplePageElement> {}

  interface IntrinsicElements {
    'app-home': AppHome;
    'app-root': AppRoot;
    'component-_template_': Component_template_;
    'component-action-sheet': ComponentActionSheet;
    'component-alert': ComponentAlert;
    'component-avatar': ComponentAvatar;
    'component-badge': ComponentBadge;
    'component-button': ComponentButton;
    'component-card': ComponentCard;
    'component-checkbox': ComponentCheckbox;
    'component-chip': ComponentChip;
    'component-content': ComponentContent;
    'component-datetime': ComponentDatetime;
    'component-fab': ComponentFab;
    'component-grid': ComponentGrid;
    'component-icons': ComponentIcons;
    'component-infinite-scroll': ComponentInfiniteScroll;
    'component-input': ComponentInput;
    'component-list': ComponentList;
    'component-list-item': ComponentListItem;
    'component-loading': ComponentLoading;
    'component-menu': ComponentMenu;
    'component-modal': ComponentModal;
    'component-modal-content': ComponentModalContent;
    'component-nav': ComponentNav;
    'component-note': ComponentNote;
    'component-picker': ComponentPicker;
    'component-popover': ComponentPopover;
    'component-progress': ComponentProgress;
    'component-radio': ComponentRadio;
    'component-range': ComponentRange;
    'component-refresher': ComponentRefresher;
    'component-reorder': ComponentReorder;
    'component-routing': ComponentRouting;
    'component-searchbar': ComponentSearchbar;
    'component-segment': ComponentSegment;
    'component-select': ComponentSelect;
    'component-skeleton-text': ComponentSkeletonText;
    'component-slides': ComponentSlides;
    'component-tabs': ComponentTabs;
    'component-tabs-games': ComponentTabsGames;
    'component-tabs-movies': ComponentTabsMovies;
    'component-tabs-music': ComponentTabsMusic;
    'component-text': ComponentText;
    'component-thumbnail': ComponentThumbnail;
    'component-toast': ComponentToast;
    'component-toggle': ComponentToggle;
    'component-toolbar': ComponentToolbar;
    'nav-example-page': NavExamplePage;
    'popover-example-page': PopoverExamplePage;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


